name: CI

on:
  push:
    branches: ["main", "master", "develop", "work"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_CACHE_DIR: "0"
      STAGE_P95_BUDGET_SECONDS: "0.25"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]

      - name: Run Ruff
        run: ruff check .

      - name: Run MyPy (strict)
        run: mypy --config-file pyproject.toml --strict src

      - name: Run tests
        run: |
          export PYTHONPATH=src
          pytest -q --junitxml=pytest-report.xml --basetemp=.pytest_tmp

      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.python-version }}
          path: |
            pytest-report.xml

      - name: Upload determinism artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: determinism-artifacts-${{ matrix.python-version }}
          path: |
            .pytest_tmp/**/equity_run_*.csv
          if-no-files-found: ignore
